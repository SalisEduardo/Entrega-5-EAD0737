install.packages("ggplot2")
plot(cars)
# ex 1
precos <- c(5800, 5300, 5900, 5400, 6300, 6900, 6400, 6200, 5900, 5400, 5200, 5800, 5400, 5200, 5800, 5300, 6200, 6800, 6300, 6400)
lengh(precos)
length(precos)
media <- mean(precos)
mediana <- median(precos)
desv_padr <- sd(precos)
cv <- desv_padr/media
df <- data.frame(
Nome = c("Jose", "Bonifacio", "Almerindo","Fred", "Abilio","Joao")
"2014" = c(160, 140, 90, 150, 95, 175)
"2015" = c(180, 145, 95, 145, 110, 145)
"2016" = c(210, 165, 110, 140, 125, 290)
"2017" = c(250, 130, 420, 155, 150, 250)
)
# ex 2
df <- data.frame(
Nome = c("Jose", "Bonifacio", "Almerindo","Fred", "Abilio","Joao"),
"2014" = c(160, 140, 90, 150, 95, 175),
"2015" = c(180, 145, 95, 145, 110, 145),
"2016" = c(210, 165, 110, 140, 125, 290),
"2017" = c(250, 130, 420, 155, 150, 250)
)
View(df)
mean(df)
mean(values(df))
df$Nome== "Jose"
subset(df, df$Nome== "Jose")
mean(subset(df, df$Nome== "Jose"))
View(df)
typeof(subset(df, df$Nome== "Jose"))
mean(c(160, 140, 90, 150, 95, 175))
typeof(c(160, 140, 90, 150, 95, 175))
print(rowMeans(df))
row.names(df) <- df$Nome
df
df <- data.frame(
"2014" = c(160, 140, 90, 150, 95, 175),
"2015" = c(180, 145, 95, 145, 110, 145),
"2016" = c(210, 165, 110, 140, 125, 290),
"2017" = c(250, 130, 420, 155, 150, 250)
)
row.names(df) <- c("Jose", "Bonifacio", "Almerindo","Fred", "Abilio","Joao")
df
rowMeans(df)
mean(df)
mean(as.matrix(df))
media_medicos <- rowMeans(df)
media_anos <- colMeans(df)
media_total <-mean(as.matrix(df))
mediana_medicos <- rowMedians(df)
library(matrixStats)
mediana_medicos <- rowMedians(df)
mediana_medicos <- rowMedians(as.matrix(df))
mediana_anos <- colMedians(as.matrix(df))
sd_total <- sd(as.matrix(df))
cv_total <- sd_total/media_total
demanda <- c(100,150,175,150,200, 300, 350, 500, 650, 593, 200, 100)
length(demanda)
dias_prod <- c(20,18,21,21,22,22,21,10,21,22,21,18)
demanda <- c(100,150,175,150,200, 300, 350, 500, 650, 593, 200, 100)
dias_prod <- c(20,18,21,21,22,22,21,10,21,22,21,18)
demanda_acum <- cumsum(demanda)
prod <- 10* dias_prod
prod_acum <- cumsum(prod)
estoque <- prod_acum - demanda_acum
estoque
plot(demanda)
demanda <- c(100,150,175,150,200, 300, 350, 500, 650, 593, 200, 100)
dias_prod <- c(20,18,21,21,22,22,21,10,21,22,21,18)
demanda_acum <- cumsum(demanda)
ritm_const <- 16
prod <- ritm_const * dias_prod
prod_acum <- cumsum(prod)
estoque <- prod_acum - demanda_acum
estoque
custo_prod <- prod * 50
diff(estoque)
help("diff")
estoque_medio <- append(diff(estoque),0,1)/2
estoque_medio <- diff(append(estoque,0,1))/2
estoque_medio
estoque_medio <- diff(estoque)/2
append(estoque,0,1)
append(estoque,0,0)
estoque_medio <- diff(append(estoque,0,0))/2
estoque_medio
estoque_medio <- diff(cumsum(append(estoque,0,0)))/2
estoque_medio
estoque[0]
estoque[1]
estoque[1:]
estoque[1:4]
tail(estoque, -1)
estoque
for i in length(tail(estoque,-1):
print(i)
for i in length(tail(estoque,-1){
print(i)
}
for (i in length(tail(estoque,-1)){
print(i)
}
for i in i:5{
print(i)
}
for i in i:5{
print(i)
}
for (i in 1:5){
print(i)
}
for (i in estoque){
print(i)
}
for (i in tail(estoque,-1)){
print(i)
}
for (i in length(tail(estoque,-1))){
print(i)
}
for (i in range(length(tail(estoque,-1)))){
print(i)
}
append(estoque, 0, 0) + estoque
append(estoque,0,-1)
append(estoque, 0, 0) + append(estoque,0,length(estoque)+1)
(append(estoque, 0, 0) + append(estoque,0,length(estoque)+1))/2
estoque_medio <- (append(estoque, 0, 0) + append(estoque,0,length(estoque)+1))/2
estoque_medio <- estoque_medio[1:11]
estoque medio
estoque_medio
estoque_medio <- (append(estoque, 0, 0) + append(estoque,0,length(estoque)+1))/2
estoque_medio <- estoque_medio[1:12]
estoque_medio
custo_estoque <- 1.5 * prod * estoque_medio
custo_estoque
custo_estoque <- 1.5 * dias_prod * estoque_medio
custo_estoque
custo_estoque <- 1.5 * dias_prod * estoque_medio
custo_admissao <- 500 * 6
custo_total <- custo_admissao + custo_estoque + custo_prod
custo_total
custo_total <- custo_admissao + sum(custo_estoque) + sum(custo_prod)
custo_total
sd(c(5300,4800,5600,4700,5100))
sd(c(5300,4800,5600,4700,5100))/mean(c(5300,4800,5600,4700,5100))
sd(c(5300,4800,5600,4700,5100))/mean(c(5300,4800,5600,4700,5100))*100
N = length(a)
numerador_wald <- sum((a-b)/N)
denominador_wald <- sqrt((1 / N*(N-1) ) * sum ((a-b-numerador_wald)^2))
W =   numerador_wald / denominador_wald
a <- c(0.9, 0.89, 0.87, 0.9, 0.88, 0.9, 0.91, 0.89, 0.88, 0.89)
b <- c(0.89, 0.87, 0.86, 0.89, 0.92, 0.88, 0.87, 0.9, 0.9, 0.87)
N = length(a)
numerador_wald <- sum((a-b)/N)
denominador_wald <- sqrt((1 / N*(N-1) ) * sum ((a-b-numerador_wald)^2))
W =   numerador_wald / denominador_wald
w
W
a <- c(0.9, 0.89, 0.87, 0.9, 0.88, 0.9, 0.91, 0.89, 0.88, 0.89)
b <- c(0.89, 0.87, 0.86, 0.89, 0.92, 0.88, 0.87, 0.9, 0.9, 0.87)
N = length(a)
numerador_wald <- sum(a-b)/N
denominador_wald <- sqrt((1 / N*(N-1) ) * sum ((a-b-numerador_wald)^2))
W =   numerador_wald / denominador_wald
W
a <- c(0.9, 0.89, 0.87, 0.9, 0.88, 0.9, 0.91, 0.89, 0.88, 0.89)
b <- c(0.89, 0.87, 0.86, 0.89, 0.92, 0.88, 0.87, 0.9, 0.9, 0.87)
N = length(a)
sum(a-b)/N
sum((a-b)/N)
denominador_wald
sum ((a-b-numerador_wald)^2)
(1 / N*(N-1) )
a <- c(0.9, 0.89, 0.87, 0.9, 0.88, 0.9, 0.91, 0.89, 0.88, 0.89)
b <- c(0.89, 0.87, 0.86, 0.89, 0.92, 0.88, 0.87, 0.9, 0.9, 0.87)
N = length(a)
numerador_wald <- sum(a-b)/N
denominador_wald <- sqrt((1 /( N*(N-1)) ) * sum ((a-b-numerador_wald)^2))
W =   numerador_wald / denominador_wald
W
x <- seq(-5,5)
y <- x^2
sum(y * 1/11)
v <- c(exp(-1.2),exp(0.12), exp(4.8))
v/sum(v)
v_2 <- c(-1.2,0.12,4.8)
exp(v_2)
exp(v_2) == v
v <- c(-1.2,0.12,4.8)
v_exp <- exp(v)
num(norm_v)
sum(norm_v)
norm_v <- v_exp / sum(v_exp)
sum(norm_v)
-log(norm_v[3])
library(PortfolioAnalytics)
install.packages("ROI.plugin.glpk")
install.packages("highcharter",dep=T)
R.version
install.packages("highcharter",dep=T)
install.packages("highcharter")
library(highcharter)
setwd("~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737")
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
fund.names
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
fora_amostra
carteira
carteira_EW <- portfolio.spec(assets = fund.names) # criando a carteira
print.default(carteira_EW)
extractWeights(carteira)
RetornoMC = Return.portfolio(fora_amostra,weights = extractWeights(MinhaCarteira))
carteira$assets
class(carteira$assets)
carteira$assets +1
Return.portfolio(fora_amostra,weights = carteira_EW$assets)
carteira$assets
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
carteira$assets
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
retorno_medio_teste_MC
retorno_medio_teste_EW
sd_retorno_test_MC
sd_retorno_test_EW
View(df_inicial)
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-02")
endDate = as.Date("2021-12-01")
#Captura dos dados
getSymbols("IGTA3.SA", src = "yahoo", from = startDate, to = endDate)
#Cálculo dos retornos
IGTA3 <- dailyReturn(IGTA3.SA)
IGTA3
IGTA3.SA
tail(IGTA3.SA)
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
help("chart.CumReturns")
retornos["2021"]
retornos["2021",]
retornos["2021-01-01",]
retornos
head(retornos)
head(retornos)
View(Acoes)
View(Acoes)
retornos
# ------------------------------------------------
# FEAUSP
# EAD737 - Topicos Avancados de Financas
# Prof. Leandro Maciel (leandromaciel@usp.br)
# Segundo Semestre de 2020
# ------------------------------------------------
# ------------------------------------------------------------------------------
# Ideia: fazer o balanceamento da carteira recomendada (10SIM) pelo BTG do mês de novembro
# fonte: https://www.poupardinheiro.com.br/10-acoes-para-investir-segundo-o-btg-pactual
# Acoes foram obtidas pela API do alphavantage - extracao feita pelo python
# obs: os dados disponiveis sao desde 2019-01-02 ate 2021-12-01
# dados faltantes; Raizen antes do IPO e IGTA recentemente (nao sei o motivo)
# ------------------------------------------------------------------------------
#Pacotes
# library(quantmod)   # nao foi necessaria
library(readxl)
library(xts)
library(PortfolioAnalytics)
library(PerformanceAnalytics)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
library(tidyverse)
library(corrplot)
# ------------------------------------------------------------------------------
#df_inicial <- read.csv("port_acoes.csv",header = TRUE)
df_inicial <- read.csv("port_acoes_maior_periodo.csv",header = TRUE)
Acoes <- df_inicial[, -1]
row.names(Acoes) <- df_inicial[,1]
retornos <- Return.calculate(Acoes,method = "log") %>%
na.omit()
# ------------------------------------------------
retornos
View(retornos)
View(retornos)
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
# ------------------------------------------------
# FEAUSP
# EAD737 - Topicos Avancados de Financas
# Prof. Leandro Maciel (leandromaciel@usp.br)
# Segundo Semestre de 2020
# ------------------------------------------------
# ------------------------------------------------------------------------------
# Ideia: fazer o balanceamento da carteira recomendada (10SIM) pelo BTG do mês de novembro
# fonte https://www.poupardinheiro.com.br/10-acoes-para-investir-segundo-o-btg-pactual
# Acoes foram obtidas pela API do alphavantage - extracao feita pelo python
# obs: os dados disponiveis sao desde 2019-01-02 ate 2021-12-01
# dados faltantes; Raizen antes do IPO e IGTA recentemente (nao sei o motivo)
# ------------------------------------------------------------------------------
#Pacotes
# library(quantmod)   # nao foi necessaria
library(readxl)
library(xts)
library(PortfolioAnalytics)
library(PerformanceAnalytics)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
library(tidyverse)
library(corrplot)
# ------------------------------------------------------------------------------
#df_inicial <- read.csv("port_acoes.csv",header = TRUE)
df_inicial <- read.csv("port_acoes_maior_periodo.csv",header = TRUE)
Acoes <- df_inicial[, -1]
row.names(Acoes) <- df_inicial[,1]
#retornos <- Return.calculate(Acoes,method = "log") %>%
#           na.omit()
retornos <- Return.calculate(Acoes,method = "log")
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
matrizCorrelacao
help(cor)
matrizCorrelacao = round(cor(as.matrix(retornos),use = "pairwise.complete.obs"),3)
matrizCorrelacao
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
carteira
carteira$assets
help("meanvar.efficient.frontier")
Acoes
Acoes[ , colSums(is.na(Acoes)) == 0]
dim(Acoes[ , colSums(is.na(Acoes)) == 0])
names(Acoes[ , colSums(is.na(Acoes)) == 0])
names(Acoes)
Acoes[1,]
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-01")
endDate = as.Date("2021-12-01")
#Captura dos dados
getSymbols('WEGE3.SA', src = "yahoo", from = startDate, to = endDate)
#Cálculo dos retornos
wege_RET <- dailyReturn(WEGE3.SA)
wege_RET
is.na(wege_RET)
sum(is.na(wege_RET))
sum(is.na(WEGE3.SA$WEGE3.SA.Adjusted))
getSymbols('IGTA3.SA', src = "yahoo", from = startDate, to = endDate)
sum(is.na(IGTA3.SA$IGTA3.SA.Adjusted)
sum(is.na(IGTA3.SA$IGTA3.SA.Adjusted))
View(IGTA3.SA)
getSymbols('IGTA11.SA', src = "yahoo", from = startDate, to = endDate)
getSymbols('JPSA3.SA', src = "yahoo", from = startDate, to = endDate)
View(JPSA3.SA)
fund.names
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-01")
endDate = as.Date("2021-11-30")
#Seleção das ações
tickers = c("PRIO3.SAO" , "RAIZ4.SAO" , "ITUB4.SAO" ,  "'JPSA3.SA'"  , "ARZZ3.SAO",  "ENGI11.SAO", "SLCE3.SAO",  "WEGE3.SAO" , "GGBR4.SAO")
#Captura dos dados
getSymbols(tickers, src = "yahoo", from = startDate, to = endDate)
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-01")
endDate = as.Date("2021-11-30")
#Seleção das ações
tickers = c("PRIO3.SA" , "RAIZ4.SA" , "ITUB4.SA" ,  "'JPSA3.SA'"  , "ARZZ3.SA",  "ENGI11.SA", "SLCE3.SA",  "WEGE3.SA" , "GGBR4.SA")
#Captura dos dados
getSymbols(tickers, src = "yahoo", from = startDate, to = endDate)
getSymbols("JPSA3.SA" , src = "yahoo", from = startDate, to = endDate)
is.na(JPSA3.SA$JPSA3.SA.Adjusted)
sum(is.na(JPSA3.SA$JPSA3.SA.Adjusted))
getSymbols("RAIZ4.SA" , src = "yahoo", from = startDate, to = endDate)
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-01")
endDate = as.Date("2021-11-30")
#Captura dos dados
getSymbols("PRIO3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("RAIZ4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ITUB4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("JPSA3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ARZZ3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ENGI11.SA", src = "yahoo", from = startDate, to = endDate)
getSymbols("SLCE3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("WEGE3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("GGBR4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("PSSA3.SA" , src = "yahoo", from = startDate, to = endDate)
PRIO3_RET  <- dailyReturn(PRIO3.SA)
RAIZ4_RET  <- dailyReturn(RAIZ4.SA)
ITUB4_RET  <- dailyReturn(ITUB4.SA)
JPSA3_RET  <- dailyReturn(JPSA3.SA)
ARZZ3_RET  <- dailyReturn(ARZZ3.SA)
ENGI11_RET <- dailyReturn(ENGI11.SA)
SLCE3_RET <- dailyReturn(SLCE3.SA)
GGBR4_RET <- dailyReturn(GGBR4.SA)
PSSA3_RET <- dailyReturn(PSSA3.SA)
data.frame(c(PRIO3_RET,RAIZ4_RET))
class(PRIO3_RET)
merge(PRIO3_RET,RAIZ4_RET)
tail(merge(PRIO3_RET,RAIZ4_RET))
merge(PRIO3_RET,RAIZ4_RET,ITUB4_RET,JPSA3_RET,ARZZ3_RET,ENGI11_RET,SLCE3_RET,GGBR4_RET,PSSA3_RET)
dim(merge(PRIO3_RET,RAIZ4_RET,ITUB4_RET,JPSA3_RET,ARZZ3_RET,ENGI11_RET,SLCE3_RET,GGBR4_RET,PSSA3_RET))
PRIO3_RET  <- dailyReturn(PRIO3.SA)
RAIZ4_RET  <- dailyReturn(RAIZ4.SA)
ITUB4_RET  <- dailyReturn(ITUB4.SA)
JPSA3_RET  <- dailyReturn(JPSA3.SA)
ARZZ3_RET  <- dailyReturn(ARZZ3.SA)
ENGI11_RET <- dailyReturn(ENGI11.SA)
WEGE3_RET <- dailyReturn(WEGE3.SA)
SLCE3_RET <- dailyReturn(SLCE3.SA)
GGBR4_RET <- dailyReturn(GGBR4.SA)
PSSA3_RET <- dailyReturn(PSSA3.SA)
merge(PRIO3_RET,RAIZ4_RET,ITUB4_RET,JPSA3_RET,ARZZ3_RET,ENGI11_RET,SLCE3_RET,WEGE3_RET,GGBR4_RET,PSSA3_RET)
library(quantmod)
#Seleção do período de análise
startDate = as.Date("2019-01-01")
endDate = as.Date("2021-11-30")
#Captura dos dados
getSymbols("PRIO3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("RAIZ4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ITUB4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("JPSA3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ARZZ3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("ENGI11.SA", src = "yahoo", from = startDate, to = endDate)
getSymbols("SLCE3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("WEGE3.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("GGBR4.SA" , src = "yahoo", from = startDate, to = endDate)
getSymbols("PSSA3.SA" , src = "yahoo", from = startDate, to = endDate)
#Cálculo dos retornos
PRIO3_RET  <- dailyReturn(PRIO3.SA)
RAIZ4_RET  <- dailyReturn(RAIZ4.SA)
ITUB4_RET  <- dailyReturn(ITUB4.SA)
JPSA3_RET  <- dailyReturn(JPSA3.SA)
ARZZ3_RET  <- dailyReturn(ARZZ3.SA)
ENGI11_RET <- dailyReturn(ENGI11.SA)
WEGE3_RET <- dailyReturn(WEGE3.SA)
SLCE3_RET <- dailyReturn(SLCE3.SA)
GGBR4_RET <- dailyReturn(GGBR4.SA)
PSSA3_RET <- dailyReturn(PSSA3.SA)
merge(PRIO3_RET,RAIZ4_RET,ITUB4_RET,JPSA3_RET,ARZZ3_RET,ENGI11_RET,SLCE3_RET,WEGE3_RET,GGBR4_RET,PSSA3_RET)
retornos_teste <- merge(PRIO3_RET,RAIZ4_RET,ITUB4_RET,JPSA3_RET,ARZZ3_RET,ENGI11_RET,SLCE3_RET,WEGE3_RET,GGBR4_RET,PSSA3_RET)
dim(retornos_teste)
class(retornos_teste)
as.data.frame(retornos_teste)
colnames(retornos_teste)
tickers <- c("PRIO3.SA", "RAIZ4.SA", "ITUB4.SA", "JPSA3.SA","ARZZ3.SA", "ENGI11.SA" , "SLCE3.SA", "WEGE3.SA","GGBR4.SA","PSSA3.SA")
tickers
length(tickers)
colnames(retornos_teste) <- tickers
retornos_teste
source('~/Documentos/Códigos faculdade/Tópicos Avançados de Finanças/Entrega-5-EAD0737/mpt.R', echo=TRUE)
retornos[,2]
